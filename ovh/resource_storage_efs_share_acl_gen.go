// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	ovhtypes "github.com/ovh/terraform-provider-ovh/v2/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func StorageEfsShareAclResourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"access_level": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Rule access level",
			MarkdownDescription: "Rule access level",
			Validators: []validator.String{
				stringvalidator.OneOf(
					"ro",
					"rw",
				),
			},
		},
		"access_to": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Rule destination",
			MarkdownDescription: "Rule destination",
		},
		"access_type": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Rule access type",
			MarkdownDescription: "Rule access type",
			Validators: []validator.String{
				stringvalidator.OneOf(
					"ip",
				),
			},
		},
		"created_at": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Rule creation date",
			MarkdownDescription: "Rule creation date",
		},
		"id": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Rule ID",
			MarkdownDescription: "Rule ID",
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Service name",
			MarkdownDescription: "Service name",
		},
		"share_id": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Share ID",
			MarkdownDescription: "Share ID",
		},
		"status": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Rule status",
			MarkdownDescription: "Rule status",
			Validators: []validator.String{
				stringvalidator.OneOf(
					"active",
					"applying",
					"denying",
					"error",
					"queued_to_apply",
					"queued_to_deny",
				),
			},
		},
	}

	return schema.Schema{
		Description: "",
		Attributes:  attrs,
	}
}

type StorageEfsShareAclModel struct {
	AccessLevel ovhtypes.TfStringValue `tfsdk:"access_level" json:"accessLevel"`
	AccessTo    ovhtypes.TfStringValue `tfsdk:"access_to" json:"accessTo"`
	AccessType  ovhtypes.TfStringValue `tfsdk:"access_type" json:"accessType"`
	CreatedAt   ovhtypes.TfStringValue `tfsdk:"created_at" json:"createdAt"`
	Id          ovhtypes.TfStringValue `tfsdk:"id" json:"id"`
	ServiceName ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	ShareId     ovhtypes.TfStringValue `tfsdk:"share_id" json:"shareId"`
	Status      ovhtypes.TfStringValue `tfsdk:"status" json:"status"`
}

func (v *StorageEfsShareAclModel) MergeWith(other *StorageEfsShareAclModel) {

	if (v.AccessLevel.IsUnknown() || v.AccessLevel.IsNull()) && !other.AccessLevel.IsUnknown() {
		v.AccessLevel = other.AccessLevel
	}

	if (v.AccessTo.IsUnknown() || v.AccessTo.IsNull()) && !other.AccessTo.IsUnknown() {
		v.AccessTo = other.AccessTo
	}

	if (v.AccessType.IsUnknown() || v.AccessType.IsNull()) && !other.AccessType.IsUnknown() {
		v.AccessType = other.AccessType
	}

	if (v.CreatedAt.IsUnknown() || v.CreatedAt.IsNull()) && !other.CreatedAt.IsUnknown() {
		v.CreatedAt = other.CreatedAt
	}

	if (v.Id.IsUnknown() || v.Id.IsNull()) && !other.Id.IsUnknown() {
		v.Id = other.Id
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}

	if (v.ShareId.IsUnknown() || v.ShareId.IsNull()) && !other.ShareId.IsUnknown() {
		v.ShareId = other.ShareId
	}

	if (v.Status.IsUnknown() || v.Status.IsNull()) && !other.Status.IsUnknown() {
		v.Status = other.Status
	}
}

type StorageEfsShareAclWritableModel struct {
	AccessLevel ovhtypes.TfStringValue `tfsdk:"access_level" json:"accessLevel"`
	AccessTo    ovhtypes.TfStringValue `tfsdk:"access_to" json:"accessTo"`
}

func (v StorageEfsShareAclModel) ToCreate() *StorageEfsShareAclWritableModel {
	res := &StorageEfsShareAclWritableModel{}

	if !v.AccessLevel.IsUnknown() {
		res.AccessLevel = v.AccessLevel
	}

	if !v.AccessTo.IsUnknown() {
		res.AccessTo = v.AccessTo
	}

	return res
}
