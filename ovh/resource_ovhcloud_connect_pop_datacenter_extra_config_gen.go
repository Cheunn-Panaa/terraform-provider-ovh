// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	ovhtypes "github.com/ovh/terraform-provider-ovh/v2/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func OvhcloudConnectPopDatacenterExtraConfigResourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"bgp_neighbor_area": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Optional:            true,
			Computed:            true,
			Description:         "BGP AS number",
			MarkdownDescription: "BGP AS number",
		},
		"bgp_neighbor_ip": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "Router IP for BGP",
			MarkdownDescription: "Router IP for BGP",
		},
		"config_datacenter_id": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Required:            true,
			Description:         "ID of the datacenter configuration",
			MarkdownDescription: "ID of the datacenter configuration",
		},
		"config_pop_id": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Required:            true,
			Description:         "ID of the pop configuration",
			MarkdownDescription: "ID of the pop configuration",
		},
		"id": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "ID of the extra configuration ",
			MarkdownDescription: "ID of the extra configuration ",
		},
		"next_hop": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "Static route next hop",
			MarkdownDescription: "Static route next hop",
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Service name",
			MarkdownDescription: "Service name",
		},
		"status": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Status of the pop configuration",
			MarkdownDescription: "Status of the pop configuration",
			Validators: []validator.String{
				stringvalidator.OneOf(
					"active",
					"init",
					"toDelete",
				),
			},
		},
		"subnet": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "Static route ip",
			MarkdownDescription: "Static route ip",
		},
		"type": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Type of the configuration",
			MarkdownDescription: "Type of the configuration",
			Validators: []validator.String{
				stringvalidator.OneOf(
					"bgp",
					"network",
				),
			},
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type OvhcloudConnectPopDatacenterExtraConfigModel struct {
	BgpNeighborArea    ovhtypes.TfInt64Value  `tfsdk:"bgp_neighbor_area" json:"bgpNeighborArea"`
	BgpNeighborIp      ovhtypes.TfStringValue `tfsdk:"bgp_neighbor_ip" json:"bgpNeighborIp"`
	ConfigDatacenterId ovhtypes.TfInt64Value  `tfsdk:"config_datacenter_id" json:"datacenterId"`
	ConfigPopId        ovhtypes.TfInt64Value  `tfsdk:"config_pop_id" json:"popId"`
	Id                 ovhtypes.TfInt64Value  `tfsdk:"id" json:"id"`
	NextHop            ovhtypes.TfStringValue `tfsdk:"next_hop" json:"nextHop"`
	ServiceName        ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	Status             ovhtypes.TfStringValue `tfsdk:"status" json:"status"`
	Subnet             ovhtypes.TfStringValue `tfsdk:"subnet" json:"subnet"`
	Type               ovhtypes.TfStringValue `tfsdk:"type" json:"type"`
}

func (v *OvhcloudConnectPopDatacenterExtraConfigModel) MergeWith(other *OvhcloudConnectPopDatacenterExtraConfigModel) {

	if (v.BgpNeighborArea.IsUnknown() || v.BgpNeighborArea.IsNull()) && !other.BgpNeighborArea.IsUnknown() {
		v.BgpNeighborArea = other.BgpNeighborArea
	}

	if (v.BgpNeighborIp.IsUnknown() || v.BgpNeighborIp.IsNull()) && !other.BgpNeighborIp.IsUnknown() {
		v.BgpNeighborIp = other.BgpNeighborIp
	}

	if (v.ConfigDatacenterId.IsUnknown() || v.ConfigDatacenterId.IsNull()) && !other.ConfigDatacenterId.IsUnknown() {
		v.ConfigDatacenterId = other.ConfigDatacenterId
	}

	if (v.ConfigPopId.IsUnknown() || v.ConfigPopId.IsNull()) && !other.ConfigPopId.IsUnknown() {
		v.ConfigPopId = other.ConfigPopId
	}

	if (v.Id.IsUnknown() || v.Id.IsNull()) && !other.Id.IsUnknown() {
		v.Id = other.Id
	}

	if (v.NextHop.IsUnknown() || v.NextHop.IsNull()) && !other.NextHop.IsUnknown() {
		v.NextHop = other.NextHop
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}

	if (v.Status.IsUnknown() || v.Status.IsNull()) && !other.Status.IsUnknown() {
		v.Status = other.Status
	}

	if (v.Subnet.IsUnknown() || v.Subnet.IsNull()) && !other.Subnet.IsUnknown() {
		v.Subnet = other.Subnet
	}

	if (v.Type.IsUnknown() || v.Type.IsNull()) && !other.Type.IsUnknown() {
		v.Type = other.Type
	}

}

func (v OvhcloudConnectPopDatacenterExtraConfigModel) ToCreate() *OvhcloudConnectPopDatacenterExtraConfigModel {
	res := &OvhcloudConnectPopDatacenterExtraConfigModel{}

	if !v.BgpNeighborArea.IsUnknown() {
		res.BgpNeighborArea = v.BgpNeighborArea
	}

	if !v.BgpNeighborIp.IsUnknown() {
		res.BgpNeighborIp = v.BgpNeighborIp
	}

	if !v.NextHop.IsUnknown() {
		res.NextHop = v.NextHop
	}

	if !v.Subnet.IsUnknown() {
		res.Subnet = v.Subnet
	}

	if !v.Type.IsUnknown() {
		res.Type = v.Type
	}

	return res
}

func (v OvhcloudConnectPopDatacenterExtraConfigModel) ToUpdate() *OvhcloudConnectPopDatacenterExtraConfigModel {
	res := &OvhcloudConnectPopDatacenterExtraConfigModel{}

	if !v.BgpNeighborArea.IsUnknown() {
		res.BgpNeighborArea = v.BgpNeighborArea
	}

	if !v.BgpNeighborIp.IsUnknown() {
		res.BgpNeighborIp = v.BgpNeighborIp
	}

	if !v.NextHop.IsUnknown() {
		res.NextHop = v.NextHop
	}

	if !v.Subnet.IsUnknown() {
		res.Subnet = v.Subnet
	}

	if !v.Type.IsUnknown() {
		res.Type = v.Type
	}

	return res
}

func (v *OvhcloudConnectPopDatacenterExtraConfigModel) MarshalJSON() ([]byte, error) {
	toMarshal := map[string]any{}
	if !v.BgpNeighborArea.IsNull() && !v.BgpNeighborArea.IsUnknown() {
		toMarshal["bgpNeighborArea"] = v.BgpNeighborArea
	}
	if !v.BgpNeighborIp.IsNull() && !v.BgpNeighborIp.IsUnknown() {
		toMarshal["bgpNeighborIp"] = v.BgpNeighborIp
	}
	if !v.NextHop.IsNull() && !v.NextHop.IsUnknown() {
		toMarshal["nextHop"] = v.NextHop
	}
	if !v.Subnet.IsNull() && !v.Subnet.IsUnknown() {
		toMarshal["subnet"] = v.Subnet
	}
	if !v.Type.IsNull() && !v.Type.IsUnknown() {
		toMarshal["type"] = v.Type
	}

	return json.Marshal(toMarshal)
}
